/*
1024. 科学计数法 (20)

科学计数法是科学家用来表示很大或很小的数字的一种方便的方法，其满足正则表达式[+-][1-9]"."[0-9]+E[+-][0-9]+，即数字的整数部分只有1位，小数部分至少有1位，该数字及其指数部分的正负号即使对正数也必定明确给出。

现以科学计数法的格式给出实数A，请编写程序按普通数字表示法输出A，并保证所有有效位都被保留。

输入格式：

每个输入包含1个测试用例，即一个以科学计数法表示的实数A。该数字的存储长度不超过9999字节，且其指数的绝对值不超过9999。

输出格式：

对每个测试用例，在一行中按普通数字表示法输出A，并保证所有有效位都被保留，包括末尾的0。

输入样例1：
+1.23400E-03
输出样例1：
0.00123400
输入样例2：
-1.2E+10
输出样例2：
-12000000000
*/

#include <cstdio>
#include <iostream>
#include <cstring>
#include <string>
using namespace std;

int main(){
	string str;
	while(cin>>str){
		if(str[0]=='-')
			cout<<str[0];
		int len = str.length();
		int pose = 0;	//标记E所在位置
		for(int i=1; i<len; i++){
			if(str[i]=='E')
				pose = i;
		}
		int after = 0;
		for(int i=pose+2; i<len; i++){
			after = (str[i] - '0') + 10*after;
		}

		if(str[pose+1]=='-'){
			if(after>0){
				cout<<"0.";
				for(int i=1; i<after; i++)
					cout<<0;
				for(int i=1; i<pose; i++){
					if(str[i]>='0' && str[i]<='9')
						cout<<str[i];
				}
			}else {
				for(int i=1; i<pose; i++){
					if(i==2)
						cout<<".";
					if(str[i]>='0' && str[i]<='9')
						cout<<str[i];
				}
			}
		}else {
			if(after > pose - 3){   //pose-3代表小数点后的数字位数
				if(str[1] != '0')
					cout<<str[1];
				for(int i=3; i<pose; i++){
					if(str[i]>='0' && str[i]<='9')
						cout<<str[i];
				}
				for(int i=0; i<after-(pose-3); i++)
					cout<<0;
			}else {
				if(str[1]!='0')
					cout<<str[1];
				for(int i=3; i<pose; i++){
					if(i==3+after)
						cout<<".";
					if(str[i]>='0' && str[i]<='9')
						cout<<str[i];
				}
			}
		}
	}
	return 0;
}